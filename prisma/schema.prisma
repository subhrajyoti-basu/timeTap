// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = "mongodb://localhost:27017/timeTap"
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  email          String?   @unique
  firstName      String?
  lastName       String?
  userName       String    @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  accounts Account[]
  Tasks    Task[]
  Goals    Goal[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Task {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  description    String?
  repetition     Boolean
  repetitionType String?
  state          Int      @default(0)
  progress       Int      @default(0)
  startHrs       DateTime
  endHrs         DateTime

  userId String? @db.ObjectId
  goalId String? @db.ObjectId

  user User? @relation(fields: [userId], references: [id])
  goal Goal? @relation(fields: [goalId], references: [id])
}

model Goal {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String?  @db.ObjectId
  title       String
  description String?
  state       Int      @default(0)
  progress    Int      @default(0)
  interval    String
  startTime   DateTime
  endTime     DateTime
  tasks       Task[]

  user User? @relation(fields: [userId], references: [id])
}
